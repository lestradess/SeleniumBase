# Propiedades del logger para que marque los niveles en color
status = warn
# Nombre de la configuración
name = configuraciónLog

# Configuración de los logs por consola
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.disableAnsi = false
appender.console.layout.pattern = %highlight{%d{dd-MM-yyyy HH:mm:ss.SSS} %-5level %logger{36} %msg%n}{FATAL=bright_magenta bold, ERROR=bright_red, WARN=bright_yellow bold, INFO=green bold, DEBUG=blue , TRACE=cyan}

# Directorio de los logs
property.basePath = logs

# Configuración para guardado en carpeta logs
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName = ${basePath}/Ultimo.log
appender.rolling.filePattern = ${basePath}/%d{dd_MM_yyyy-HH_mm_ss}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %highlight{%d{dd-MM-yyyy HH:mm:ss.SSS} %-5level %logger{36} %msg%n}{FATAL=magenta bold, ERROR=red, WARN=bright_yellow bold, INFO=green bold, DEBUG=blue , TRACE=cyan}
appender.rolling.policies.type = Policies

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 100MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 30
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 5
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
# Borrar los logs después de: ej 60d
appender.rolling.strategy.delete.ifLastModified.age = 10d

# Nivel menor de log
rootLogger.level = trace
# Configuración maestra de logs
rootLogger.appenderRef.stdout.ref = consoleLogger
rootLogger.appenderRef.fileLogger.ref = fileLogger
